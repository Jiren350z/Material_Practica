// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto3V3_Camilo_P_Diego_M.Models;

#nullable disable

namespace Proyecto3V3_Camilo_P_Diego_M.Migrations
{
    [DbContext(typeof(Proyecto_U_3V3Context))]
    partial class Proyecto_U_3V3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Conduce", b =>
                {
                    b.Property<int>("Idparamedico")
                        .HasColumnType("int")
                        .HasColumnName("IDParamedico");

                    b.Property<int>("Idambul")
                        .HasColumnType("int")
                        .HasColumnName("IDAmbul");

                    b.HasKey("Idparamedico", "Idambul")
                        .HasName("PK__Conduce__F90D710CCA81BC2B");

                    b.HasIndex("Idambul");

                    b.ToTable("Conduce", (string)null);
                });

            modelBuilder.Entity("DatiendeP", b =>
                {
                    b.Property<int>("Idpaciente")
                        .HasColumnType("int")
                        .HasColumnName("IDPaciente");

                    b.Property<int>("Iddoctor")
                        .HasColumnType("int")
                        .HasColumnName("IDDoctor");

                    b.HasKey("Idpaciente", "Iddoctor")
                        .HasName("PK__DAtiende__4E906891042A5FAD");

                    b.HasIndex("Iddoctor");

                    b.ToTable("DAtiendeP", (string)null);
                });

            modelBuilder.Entity("EasisteD", b =>
                {
                    b.Property<int>("Idenfermero")
                        .HasColumnType("int")
                        .HasColumnName("IDEnfermero");

                    b.Property<int>("Iddoctor")
                        .HasColumnType("int")
                        .HasColumnName("IDDoctor");

                    b.HasKey("Idenfermero", "Iddoctor")
                        .HasName("PK__EAsisteD__4A82519811755808");

                    b.HasIndex("Iddoctor");

                    b.ToTable("EAsisteD", (string)null);
                });

            modelBuilder.Entity("EatiendeP", b =>
                {
                    b.Property<int>("Idpacient")
                        .HasColumnType("int")
                        .HasColumnName("IDPacient");

                    b.Property<int>("Idenfermero")
                        .HasColumnType("int")
                        .HasColumnName("IDEnfermero");

                    b.HasKey("Idpacient", "Idenfermero")
                        .HasName("PK__EAtiende__B2F97C0F40F43C3C");

                    b.HasIndex("Idenfermero");

                    b.ToTable("EAtiendeP", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("PatiendeP", b =>
                {
                    b.Property<int>("Idpaciente")
                        .HasColumnType("int")
                        .HasColumnName("IDPaciente");

                    b.Property<int>("Idparamedico")
                        .HasColumnType("int")
                        .HasColumnName("IDParamedico");

                    b.HasKey("Idpaciente", "Idparamedico")
                        .HasName("PK__PAtiende__20D292773BC3EE02");

                    b.HasIndex("Idparamedico");

                    b.ToTable("PAtiendeP", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Ambulancium", b =>
                {
                    b.Property<int>("Idamb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAmb");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idamb"), 1L, 1);

                    b.Property<int?>("AñoDeLlamada")
                        .HasColumnType("int")
                        .HasColumnName("Año_de_llamada");

                    b.Property<bool>("Disponibilidad")
                        .HasColumnType("bit");

                    b.Property<int?>("DíaDeLlamada")
                        .HasColumnType("int")
                        .HasColumnName("Día_de_llamada");

                    b.Property<TimeSpan?>("HoraDeLlamada")
                        .HasColumnType("time")
                        .HasColumnName("Hora_de_llamada");

                    b.Property<string>("Marca")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("MesDeLlamada")
                        .HasColumnType("int")
                        .HasColumnName("Mes_de_llamada");

                    b.Property<string>("Modelo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Patente")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("UbicaciónActual")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Ubicación_actual");

                    b.HasKey("Idamb")
                        .HasName("PK__Ambulanc__932197C298B23031");

                    b.HasIndex(new[] { "Patente" }, "UQ__Ambulanc__CA6551662B26B919")
                        .IsUnique()
                        .HasFilter("[Patente] IS NOT NULL");

                    b.ToTable("Ambulancia");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.CitaMedica", b =>
                {
                    b.Property<int>("IdcitaMed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCitaMed");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcitaMed"), 1L, 1);

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("DepartamentoMedico")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Departamento_medico");

                    b.Property<int>("Día")
                        .HasColumnType("int");

                    b.Property<int?>("Iddoctor")
                        .HasColumnType("int")
                        .HasColumnName("IDDoctor");

                    b.Property<int?>("Idpaciente")
                        .HasColumnType("int")
                        .HasColumnName("IDPaciente");

                    b.Property<int?>("Idrecepcionista")
                        .HasColumnType("int")
                        .HasColumnName("IDRecepcionista");

                    b.Property<int?>("Idsal")
                        .HasColumnType("int")
                        .HasColumnName("IDSal");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Pago")
                        .HasColumnType("int");

                    b.HasKey("IdcitaMed")
                        .HasName("PK__Cita_med__7AF11908FCA1623A");

                    b.HasIndex("Iddoctor");

                    b.HasIndex("Idpaciente");

                    b.HasIndex("Idrecepcionista");

                    b.HasIndex("Idsal");

                    b.ToTable("Cita_medica", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Doctor", b =>
                {
                    b.Property<int>("Iddoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDDoc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Iddoc"), 1L, 1);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Especialización")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("HorarioDeAtención")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Horario_de_atención");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("NúmeroDeCasa")
                        .HasColumnType("int")
                        .HasColumnName("Número_de_casa");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Iddoc")
                        .HasName("PK__Doctor__93E3A42C009D3353");

                    b.ToTable("Doctor", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Enfermero", b =>
                {
                    b.Property<int>("Idenf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDEnf");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idenf"), 1L, 1);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HorarioDeAtención")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Horario_de_atención");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("NúmeroDeCasa")
                        .HasColumnType("int")
                        .HasColumnName("Número_de_casa");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Idenf")
                        .HasName("PK__Enfermer__922E7E2B4BDB3F79");

                    b.ToTable("Enfermero", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Farmacium", b =>
                {
                    b.Property<int>("Idfar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDFar");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idfar"), 1L, 1);

                    b.Property<int?>("CapacidadDeStock")
                        .HasColumnType("int")
                        .HasColumnName("Capacidad_de_stock");

                    b.Property<string>("HorarioDeAtencion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Horario_de_atencion");

                    b.Property<string>("ListaDeMedicamentos")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Lista_de_medicamentos");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Idfar")
                        .HasName("PK__Farmacia__92680E79A0D2794D");

                    b.ToTable("Farmacia");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Medicamento", b =>
                {
                    b.Property<int>("Idmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDMed");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idmed"), 1L, 1);

                    b.Property<string>("CódigoEnBodega")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Código_en_bodega");

                    b.Property<DateTime>("FechaDeCaducidad")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_de_caducidad");

                    b.Property<string>("FórmulaFarmaceutica")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Fórmula_farmaceutica");

                    b.Property<int?>("Iddoctor")
                        .HasColumnType("int")
                        .HasColumnName("IDDoctor");

                    b.Property<int?>("Idfarmacia")
                        .HasColumnType("int")
                        .HasColumnName("IDFarmacia");

                    b.Property<string>("InstruccionesDeUso")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Instrucciones_de_uso");

                    b.Property<string>("Integredientes")
                        .IsRequired()
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Idmed")
                        .HasName("PK__Medicame__941E75944685AEBE");

                    b.HasIndex("Iddoctor");

                    b.HasIndex("Idfarmacia");

                    b.HasIndex(new[] { "CódigoEnBodega" }, "UQ__Medicame__7233961EF50DE055")
                        .IsUnique()
                        .HasFilter("[Código_en_bodega] IS NOT NULL");

                    b.ToTable("Medicamento", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDeFarmacium", b =>
                {
                    b.Property<int>("IdnumFar")
                        .HasColumnType("int")
                        .HasColumnName("IDNumFar");

                    b.Property<string>("NúmeroDeTelefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdnumFar")
                        .HasName("PK__NúmeroDe__8D039F1C9C33FD94");

                    b.ToTable("NúmeroDeTelefonoDeFarmacia");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDePaciente", b =>
                {
                    b.Property<int>("IdnumPac")
                        .HasColumnType("int")
                        .HasColumnName("IDNumPac");

                    b.Property<string>("NúmeroDeTelefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdnumPac")
                        .HasName("PK__NúmeroDe__5DCA472A9D5F8180");

                    b.ToTable("NúmeroDeTelefonoDePaciente", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDeRecepcionistum", b =>
                {
                    b.Property<int>("IdnumRecep")
                        .HasColumnType("int")
                        .HasColumnName("IDNumRecep");

                    b.Property<string>("NúmeroDeTelefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdnumRecep")
                        .HasName("PK__NúmeroDe__64305DC24E30AFCF");

                    b.ToTable("NúmeroDeTelefonoDeRecepcionista");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoEnfermero", b =>
                {
                    b.Property<int>("IdnumEnf")
                        .HasColumnType("int")
                        .HasColumnName("IDNumEnf");

                    b.Property<string>("NúmeroDeTelefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdnumEnf")
                        .HasName("PK__NúmeroDe__8C423383483E8856");

                    b.ToTable("NúmeroDeTelefonoEnfermero", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroTelefonoParamedico", b =>
                {
                    b.Property<int>("IdnumPara")
                        .HasColumnType("int")
                        .HasColumnName("IDNumPara");

                    b.Property<string>("NúmeroDeTelefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdnumPara")
                        .HasName("PK__NúmeroTe__7F3F0E547756E300");

                    b.ToTable("NúmeroTelefonoParamedico", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", b =>
                {
                    b.Property<int>("Idpac")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPac");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpac"), 1L, 1);

                    b.Property<string>("Calle")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HistoriaClínica")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Historia_clínica");

                    b.Property<int?>("Idambul")
                        .HasColumnType("int")
                        .HasColumnName("IDAmbul");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("NúmeroDeCasa")
                        .HasColumnType("int")
                        .HasColumnName("Número_de_casa");

                    b.Property<int>("Pago")
                        .HasColumnType("int");

                    b.Property<string>("Problema")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Rut")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("SalaId")
                        .HasColumnType("int")
                        .HasColumnName("SalaID");

                    b.HasKey("Idpac")
                        .HasName("PK__Paciente__98F9A670F6C82C52");

                    b.HasIndex("Idambul");

                    b.HasIndex("SalaId");

                    b.HasIndex(new[] { "Rut" }, "UQ__Paciente__CAF036600AADE94F")
                        .IsUnique()
                        .HasFilter("[Rut] IS NOT NULL");

                    b.ToTable("Paciente", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Paramedico", b =>
                {
                    b.Property<int>("Idpar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPar");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpar"), 1L, 1);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Certificación")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HorarioDeAtención")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Horario_de_atención");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("NúmeroDeCasa")
                        .HasColumnType("int")
                        .HasColumnName("Número_de_casa");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Idpar")
                        .HasName("PK__Paramedi__98F9A64330B511A2");

                    b.ToTable("Paramedico", (string)null);
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Recepcionistum", b =>
                {
                    b.Property<int>("Idrecep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDRecep");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idrecep"), 1L, 1);

                    b.Property<string>("DepartamentoMédico")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Departamento_médico");

                    b.Property<string>("Horario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Primer_apellido");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Primer_nombre");

                    b.Property<string>("Rut")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Segundo_apellido");

                    b.HasKey("Idrecep")
                        .HasName("PK__Recepcio__083226BDFBF65020");

                    b.HasIndex(new[] { "Rut" }, "UQ__Recepcio__CAF0366042E580CF")
                        .IsUnique()
                        .HasFilter("[Rut] IS NOT NULL");

                    b.ToTable("Recepcionista");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Sala", b =>
                {
                    b.Property<int>("Idsala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSala");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idsala"), 1L, 1);

                    b.Property<int>("CapacidadDePacientes")
                        .HasColumnType("int")
                        .HasColumnName("Capacidad_de_pacientes");

                    b.Property<string>("Código")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Diagnóstico")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeSpan?>("HoraDeEntrada")
                        .HasColumnType("time")
                        .HasColumnName("Hora_de_entrada");

                    b.Property<TimeSpan?>("HoraDeSalida")
                        .HasColumnType("time")
                        .HasColumnName("Hora_de_salida");

                    b.Property<string>("NombreDePaciente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Nombre_de_paciente");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Idsala")
                        .HasName("PK__Sala__C6F3BA0F5BB7B1B5");

                    b.HasIndex(new[] { "Código" }, "UQ__Sala__D68C8CB051C52F91")
                        .IsUnique()
                        .HasFilter("[Código] IS NOT NULL");

                    b.ToTable("Sala", (string)null);
                });

            modelBuilder.Entity("Conduce", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Ambulancium", null)
                        .WithMany()
                        .HasForeignKey("Idambul")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Conduce__IDAmbul__66603565");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paramedico", null)
                        .WithMany()
                        .HasForeignKey("Idparamedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Conduce__IDParam__656C112C");
                });

            modelBuilder.Entity("DatiendeP", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Doctor", null)
                        .WithMany()
                        .HasForeignKey("Iddoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DAtiendeP__IDDoc__71D1E811");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", null)
                        .WithMany()
                        .HasForeignKey("Idpaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DAtiendeP__IDPac__70DDC3D8");
                });

            modelBuilder.Entity("EasisteD", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Doctor", null)
                        .WithMany()
                        .HasForeignKey("Iddoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EAsisteD__IDDoct__797309D9");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Enfermero", null)
                        .WithMany()
                        .HasForeignKey("Idenfermero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EAsisteD__IDEnfe__787EE5A0");
                });

            modelBuilder.Entity("EatiendeP", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Enfermero", null)
                        .WithMany()
                        .HasForeignKey("Idenfermero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EAtiendeP__IDEnf__75A278F5");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", null)
                        .WithMany()
                        .HasForeignKey("Idpacient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__EAtiendeP__IDPac__74AE54BC");
                });

            modelBuilder.Entity("PatiendeP", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", null)
                        .WithMany()
                        .HasForeignKey("Idpaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PAtiendeP__IDPac__7C4F7684");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paramedico", null)
                        .WithMany()
                        .HasForeignKey("Idparamedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PAtiendeP__IDPar__7D439ABD");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.CitaMedica", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Doctor", "IddoctorNavigation")
                        .WithMany("CitaMedicas")
                        .HasForeignKey("Iddoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_four");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", "IdpacienteNavigation")
                        .WithMany("CitaMedicas")
                        .HasForeignKey("Idpaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_one");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Recepcionistum", "IdrecepcionistaNavigation")
                        .WithMany("CitaMedicas")
                        .HasForeignKey("Idrecepcionista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_three");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Sala", "IdsalNavigation")
                        .WithMany("CitaMedicas")
                        .HasForeignKey("Idsal")
                        .HasConstraintName("FK_two");

                    b.Navigation("IddoctorNavigation");

                    b.Navigation("IdpacienteNavigation");

                    b.Navigation("IdrecepcionistaNavigation");

                    b.Navigation("IdsalNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Medicamento", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Doctor", "IddoctorNavigation")
                        .WithMany("Medicamentos")
                        .HasForeignKey("Iddoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Medicamen__IDDoc__02084FDA");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Farmacium", "IdfarmaciaNavigation")
                        .WithMany("Medicamentos")
                        .HasForeignKey("Idfarmacia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Medicamen__IDFar__01142BA1");

                    b.Navigation("IddoctorNavigation");

                    b.Navigation("IdfarmaciaNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDeFarmacium", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Farmacium", "IdnumFarNavigation")
                        .WithOne("NúmeroDeTelefonoDeFarmacium")
                        .HasForeignKey("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDeFarmacium", "IdnumFar")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NúmeroDeT__IDNum__59FA5E80");

                    b.Navigation("IdnumFarNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDePaciente", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", "IdnumPacNavigation")
                        .WithOne("NúmeroDeTelefonoDePaciente")
                        .HasForeignKey("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDePaciente", "IdnumPac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NúmeroDeT__IDNum__6E01572D");

                    b.Navigation("IdnumPacNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDeRecepcionistum", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Recepcionistum", "IdnumRecepNavigation")
                        .WithOne("NúmeroDeTelefonoDeRecepcionistum")
                        .HasForeignKey("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoDeRecepcionistum", "IdnumRecep")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NúmeroDeT__IDNum__5FB337D6");

                    b.Navigation("IdnumRecepNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoEnfermero", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Enfermero", "IdnumEnfNavigation")
                        .WithOne("NúmeroDeTelefonoEnfermero")
                        .HasForeignKey("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroDeTelefonoEnfermero", "IdnumEnf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NúmeroDeT__IDNum__4D94879B");

                    b.Navigation("IdnumEnfNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroTelefonoParamedico", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Paramedico", "IdnumParaNavigation")
                        .WithOne("NúmeroTelefonoParamedico")
                        .HasForeignKey("Proyecto3V3_Camilo_P_Diego_M.Models.NúmeroTelefonoParamedico", "IdnumPara")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NúmeroTel__IDNum__52593CB8");

                    b.Navigation("IdnumParaNavigation");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", b =>
                {
                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Ambulancium", "IdambulNavigation")
                        .WithMany("Pacientes")
                        .HasForeignKey("Idambul")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Paciente__IDAmbu__6B24EA82");

                    b.HasOne("Proyecto3V3_Camilo_P_Diego_M.Models.Sala", "Sala")
                        .WithMany("Pacientes")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Paciente__SalaID__6A30C649");

                    b.Navigation("IdambulNavigation");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Ambulancium", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Doctor", b =>
                {
                    b.Navigation("CitaMedicas");

                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Enfermero", b =>
                {
                    b.Navigation("NúmeroDeTelefonoEnfermero");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Farmacium", b =>
                {
                    b.Navigation("Medicamentos");

                    b.Navigation("NúmeroDeTelefonoDeFarmacium");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Paciente", b =>
                {
                    b.Navigation("CitaMedicas");

                    b.Navigation("NúmeroDeTelefonoDePaciente");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Paramedico", b =>
                {
                    b.Navigation("NúmeroTelefonoParamedico");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Recepcionistum", b =>
                {
                    b.Navigation("CitaMedicas");

                    b.Navigation("NúmeroDeTelefonoDeRecepcionistum");
                });

            modelBuilder.Entity("Proyecto3V3_Camilo_P_Diego_M.Models.Sala", b =>
                {
                    b.Navigation("CitaMedicas");

                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
